{"version":3,"sources":["style/theme.js","style/media.js","components/Header.js","components/useForm.js","components/LoginFormValidationRules.js","components/Button.js","components/Signup.js","components/PopUpModal.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js","img/happy_otter_transparent.png"],"names":["colours","theme","brightBackground","darkBackground","headerFontColour","headerFontWeight","bodyFont","buttonPrimaryBackground","buttonSecondaryBackground","buttonBorderRadius","buttonFontColour","footerFontColour","formBackgroundColour","sizes","small","smallmed","medium","large","medlarge","xlarge","xxlarge","media","Object","keys","reduce","acc","label","accumulator","emSize","css","HeaderTag","styled","header","props","Header","console","log","useForm","callback","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","email","test","confirmEmail","ButtonTag","button","buttonType","Button","onClick","text","defaultProps","Form","form","ThankYouMessage","h1","Signup","axios","post","then","response","setSubmitted","status","catch","err","submitted","onSubmit","noValidate","className","autoComplete","type","onChange","required","src","otter","alt","width","ModalWrapper","div","StyledModal","Modal","setAppElement","PopUpModal","subtitle","React","modalIsOpen","setIsOpen","closeModal","isOpen","onAfterOpen","style","color","onRequestClose","ref","_subtitle","MainSection","section","Content","Main","FooterTag","footer","Footer","Wrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ba864cbb.chunk.js","sourcesContent":["/*\n  THEMING\n  - Store any colours in relevant objects below.\n  - Ensure that themes.haven and themes.opus have the exact same keys\n  - Only store themes.haven/themes.opus keys where there is a difference between environments\n  - Keep any shared styles within the components e.g. the horizontal header/footer border in the conversation area has the same styles for both brands so no need to store any related values in the themes object\n*/\n\n/*\n  Colour names in shared/haven/opusColours come from 'color description' section of www.colorhexa.com\n*/\n\nexport const colours = {\n  darkFont: '#303036',\n  paleFont: '#fffbfa',\n  brandLightBlue: '#5cd9d5ff',\n  brandDarkBlueGreen: '#0d5c63ff',\n  brandOrange: '#FC5130'\n};\n\nconst theme = {\n  brightBackground: colours.brandLightBlue,\n  darkBackground: colours.brandDarkBlueGreen,\n  headerFontColour: colours.brandOrange,\n  headerFontWeight: '300',\n  bodyFont: colours.darkFont,\n  buttonPrimaryBackground: colours.brandOrange,\n  buttonSecondaryBackground: colours.paleFont,\n  buttonBorderRadius: '25px',\n  buttonFontColour: colours.paleFont,\n  footerFontColour: colours.paleFont,\n  formBackgroundColour: colours.paleFont\n\n};\n\nexport default theme;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  small: 376,\n  smallmed: 415,\n  medium: 801,\n  large: 1025,\n  medlarge: 1366,\n  xlarge: 1440,\n  xxlarge: 1680\n};\n\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  const accumulator = acc;\n  const emSize = sizes[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (min-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport { media, sizes };\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderTag = styled.header`\n  background:${props => props.theme.brightBackground};\n  color: ${props => props.theme.headerFontColour};\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  position: fixed;  // for IE\n  position: sticky;\n  top: 0;\n\n  h1 {\n    font-size: 3em;\n    margin: 0.5em;\n  }\n`;\n\nconst Header = ({props}) => {\n\n  console.log(props);\n  return  (  \n  <HeaderTag>\n    <h1>Otter</h1>\n  </HeaderTag>\n)}\n\nexport default Header;\n\n","import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    \n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  }\n};\n\nexport default useForm;","export default function validate(values) {\n  let errors = {};\n  if (!values.name) {\n    errors.name = 'Please enter your name';\n  }\n  if (values.name && values.name.length < 3) {\n    errors.name = 'Name must be 3 or more characters';\n  }\n  if (!values.email) {\n    errors.email = 'Please enter your email address';\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n    errors.email = 'Email address is invalid';\n  }\n  if (values.confirmEmail && values.email) {\n    if (values.confirmEmail !== values.email) {\n      errors.confirmEmail = 'Email addresses must match';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.confirmEmail)) {\n      errors.confirmEmail = 'Email address is invalid';\n    }\n\n  } else if (!values.confirmEmail) {\n    errors.confirmEmail = 'Please enter your email address';\n  }\n\n\n  return errors;\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ButtonTag = styled.button`\n\n  background: ${props => {\n    if (props.buttonType === 'secondary') {\n      return props.theme.buttonSecondaryBackground;\n    } \n    return props.theme.buttonPrimaryBackground;\n  }};\n\n  color: ${props => {\n    if (props.buttonType === 'secondary') {\n      return props.theme.bodyFont;\n    } \n    return props.theme.buttonFontColour;\n  }};\n  font-family: 'Oldenburg', serif;\n  font-size: 1.15em;\n  font-weight: bold;\n  padding: 0.7em 1em;\n  border-radius: ${props => props.theme.buttonBorderRadius};\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &.modal-form {\n    margin-top: 1em;\n  }\n`;\n\nconst Button = ({ buttonType, onClick, text }) => (\n  <ButtonTag\n    buttonType={buttonType}\n    onClick={onClick}\n    text={text}\n  >\n    {text}\n  </ButtonTag>\n);\n\nButton.propTypes = {\n  buttonType: PropTypes.oneOf([\n    'primary',\n    'secondary'\n  ]),\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nButton.defaultProps = {\n  buttonType: 'primary',\n};\n\nexport default Button;\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport useForm from \"./useForm\";\nimport validate from './LoginFormValidationRules';\nimport styled from 'styled-components'\nimport { media } from '../style/media';\n\nimport Button from './Button'\nimport otter from '../img/happy_otter_transparent.png'\n;\n\nconst Form = styled.form`\n  input {\n    height: 2em;\n    border-radius: 25px;\n    width: 80%;\n    font-size: 1.2em;\n    padding: 0 0.5em;\n  }\n`\n\nconst ThankYouMessage = styled.h1`\n  display: flex;\n  flex-direction: column;\n  ${media.medium`\n    flex-direction: row;\n  `};\n`\n\nconst Signup = () => {\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useForm(login, validate);\n\n  const [submitted, setSubmitted] = useState(false);\n\n  function login() {\n     //send data to API\n     axios.post('https://yo7dm2sa2i.execute-api.eu-west-2.amazonaws.com/prod/signup', {\n      name: values.name,\n      email: values.email\n    })\n\n    .then(response => {\n      setSubmitted(true);\n      console.log(response.status, 'Subscriber added: request status');\n      })\n    .catch(err => {\n      console.log(err, 'Subscriber not added');\n    });\n  }\n\n  return (\n    <div>\n    {!submitted && (\n      <Form onSubmit={handleSubmit} noValidate>\n      <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <div className=\"control\">\n            <input autoComplete=\"off\" className={`input ${errors.name && 'is-danger'}`} type=\"text\" name=\"name\" onChange={handleChange} value={values.name || ''} required />\n            {errors.name && (\n              <p className=\"help is-danger\">{errors.name}</p>\n            )}\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Email Address</label>\n          <div className=\"control\">\n            <input autoComplete=\"off\" className={`input ${errors.email && 'is-danger'}`} type=\"email\" name=\"email\" onChange={handleChange} value={values.email || ''} required />\n            {errors.email && (\n              <p className=\"help is-danger\">{errors.email}</p>\n            )}\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Confirm Email Address</label>\n          <div className=\"control\">\n            <input className={`input ${errors.confirmEmail && 'is-danger'}`} type=\"email\" name=\"confirmEmail\" onChange={handleChange} value={values.confirmEmail || ''} required />\n          </div>\n          {errors.confirmEmail && (\n            <p className=\"help is-danger\">{errors.confirmEmail}</p>\n          )}\n        </div>\n        <Button\n          type=\"submit\" \n          className=\"button is-block is-info is-fullwidth\"\n          text=\"Sign me up!\"></Button>\n      </Form> \n        )}\n    { submitted && (\n      <ThankYouMessage>Thanks for joining us! We'll be in touch soon.\n      <img src={otter} alt=\"printed otter in sea\" width=\"200\"/></ThankYouMessage>\n      )\n    }\n    </div>\n  )\n};\n\nexport default Signup;\n\n","import React from 'react';\nimport Modal from 'react-modal';\n\nimport Signup from './Signup';\nimport Button from './Button'\n \nimport styled from 'styled-components';\nimport { media } from '../style/media';\n\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n`;\n\nconst StyledModal = styled(Modal)`\n  background: ${props => props.theme.formBackgroundColour};\n  margin: 5em auto;\n  padding: 1em;\n  ${media.medium`\n    width: 60%;\n  `};\n\n  div.field {\n    margin 1em 0;\n  }\n\n  p.help.is-danger {\n    color: ${props => props.theme.headerFontColour}; \n    margin-top: 0.3em;\n    font-size: 0.9em;\n    font-weight: 600;\n  }\n`;\n \n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n \nfunction PopUpModal(){\n  var subtitle;\n  const [modalIsOpen,setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n \n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n \n  function closeModal(){\n    setIsOpen(false);\n  }\n \n    return (\n      <ModalWrapper className=\"signup-modal\">\n        \n        <Button\n          buttonType=\"primary\"\n          className=\"modal-form\"\n          onClick={openModal}\n          text=\"I'm on board!\"\n        /> \n        <StyledModal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n        >\n          \n        <Button\n          buttonType=\"secondary\"\n          onClick={closeModal}\n          text=\"X\"\n        />   \n        <h2 ref={_subtitle => (subtitle = _subtitle)}>Request an invite</h2>  \n\n        <Signup />\n      </StyledModal>\n    </ModalWrapper>\n  );\n}\nexport default PopUpModal;","import React from 'react';\nimport styled from 'styled-components';\n\nimport PopUpModal from './PopUpModal';\n\nimport otter from '../img/happy_otter_transparent.png'\n\nconst MainSection = styled.section`\n  background:${props => props.theme.brightBackground};\n  height: calc(100vh - 100px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  height: calc(100vh - 100px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  height: 65vh;\n  border-bottom-left-radius: 93%;\n  background: ${props => props.theme.brightBackground};\n\n  padding: 0 10%;\n  h2 {\n    font-size: 1.8em;\n    margin: 0.4em auto;\n  }\n  h3 {\n    font-size: 2.1em;\n    margin: 0.4em auto;\n    span {\n      color: ${props => props.theme.headerFontColour};\n    }\n  }\n  img {\n    border-radius: 5%;\n    width: 200px;\n  }\n\n`;\n\nconst Main = () => (\n  <MainSection>\n\n    <Content>\n      <img src={otter} alt=\"printed otter in sea\" />\n      <h2>The new way to Happiness? </h2>\n        <h3>Be more... <span>Otter</span></h3>\n      <p>Be the first to know when we launch</p>\n    </Content>\n    <PopUpModal/>\n\n</MainSection>\n)\n\nexport default Main;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FooterTag = styled.footer`\n  color: ${props => props.theme.footerFontColour};\n  display: flex;\n  justify-content: center;\n  height: 100px;\n  background: darkslategrey;\n  div {\n    text-align: center;\n  }\n`;\nconst Footer = () => (\n<FooterTag className=\"sticky-footer\">\n  <div>\n    <h4>Made with Heart</h4>\n    <p>Copyright 2020 Otter.co</p>\n  </div>\n</FooterTag>\n)\n\nexport default Footer;\n\n","import React from 'react';\nimport './App.css';\n\nimport theme from './style/theme';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { media } from './style/media';\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nconst Wrapper = styled.div`\n  height: calc(100vh);\n\n  ${media.large`\n    margin: auto 15%;\n  `};\n`\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Wrapper>\n      <Header />\n      <Main />\n      <Footer />\n    </Wrapper>\n  </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/happy_otter_transparent.e225856b.png\";"],"sourceRoot":""}